{
  "uid" : "321798c8024e2d94",
  "name" : "test_add_group[None:::footerj{I_ Zfm8f']",
  "fullName" : "test.test_add_group.test_add_group[None#:footerj{I_ Zfm8f']",
  "historyId" : "e47dd21d1dc77a3916616946bf8295de",
  "time" : {
    "start" : 1625764607838,
    "stop" : 1625764608308,
    "duration" : 470
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert [442:name2:he...erbkW=>3, ...] == [442:name2:he...erbkW=>3, ...]\n  Left contains one more item: None:::footerj{I_ Zfm8f'\n  Use -v to get the full diff",
  "statusTrace" : "app = <fixture.application.Application object at 0x000001FCC8385250>\ndb = <fixture.orm.ORMFixture object at 0x000001FCC8385220>, check_ui = False\njson_groups = None:::footerj{I_ Zfm8f'\n\n    def test_add_group(app, db, check_ui, json_groups):\n        group = json_groups\n        with allure.step(\"Given a group list\"):\n            old_groups = db.get_group_list()\n        with allure.step(f\"When I add a group {group} to the list\"):\n            app.group.create(group)\n        with allure.step(f'Then the new group list is equal to the old list with the added group'):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           AssertionError: assert [442:name2:he...erbkW=>3, ...] == [442:name2:he...erbkW=>3, ...]\nE             Left contains one more item: None:::footerj{I_ Zfm8f'\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:15: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "stop",
    "time" : {
      "start" : 1625764600834,
      "stop" : 1625764600834,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "app",
    "time" : {
      "start" : 1625764607806,
      "stop" : 1625764607838,
      "duration" : 32
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db",
    "time" : {
      "start" : 1625764600834,
      "stop" : 1625764600849,
      "duration" : 15
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "check_ui",
    "time" : {
      "start" : 1625764607838,
      "stop" : 1625764607838,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert [442:name2:he...erbkW=>3, ...] == [442:name2:he...erbkW=>3, ...]\n  Left contains one more item: None:::footerj{I_ Zfm8f'\n  Use -v to get the full diff",
    "statusTrace" : "app = <fixture.application.Application object at 0x000001FCC8385250>\ndb = <fixture.orm.ORMFixture object at 0x000001FCC8385220>, check_ui = False\njson_groups = None:::footerj{I_ Zfm8f'\n\n    def test_add_group(app, db, check_ui, json_groups):\n        group = json_groups\n        with allure.step(\"Given a group list\"):\n            old_groups = db.get_group_list()\n        with allure.step(f\"When I add a group {group} to the list\"):\n            app.group.create(group)\n        with allure.step(f'Then the new group list is equal to the old list with the added group'):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           AssertionError: assert [442:name2:he...erbkW=>3, ...] == [442:name2:he...erbkW=>3, ...]\nE             Left contains one more item: None:::footerj{I_ Zfm8f'\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:15: AssertionError",
    "steps" : [ {
      "name" : "Given a group list",
      "time" : {
        "start" : 1625764607838,
        "stop" : 1625764607853,
        "duration" : 15
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "When I add a group None:::footerj{I_ Zfm8f' to the list",
      "time" : {
        "start" : 1625764607853,
        "stop" : 1625764608292,
        "duration" : 439
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Then the new group list is equal to the old list with the added group",
      "time" : {
        "start" : 1625764608292,
        "stop" : 1625764608308,
        "duration" : 16
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert [442:name2:he...erbkW=>3, ...] == [442:name2:he...erbkW=>3, ...]\n  Left contains one more item: None:::footerj{I_ Zfm8f'\n  Use -v to get the full diff\n",
      "statusTrace" : "  File \"C:\\Users\\dmitriy.anurin\\PycharmProjects\\python_training\\test\\test_add_group.py\", line 15, in test_add_group\n    assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "hasContent" : true,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "stop::fin",
    "time" : {
      "start" : 1625764612924,
      "stop" : 1625764614136,
      "duration" : 1212
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_add_group"
  }, {
    "name" : "subSuite",
    "value" : "test_add_group[None"
  }, {
    "name" : "host",
    "value" : "DESKTOP-UPB1C64"
  }, {
    "name" : "thread",
    "value" : "4532-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_add_group"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "json_groups",
    "value" : "None:::footerj{I_ Zfm8f'"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "321798c8024e2d94.json",
  "parameterValues" : [ "None:::footerj{I_ Zfm8f'" ]
}